apply plugin: 'com.android.application'
apply plugin: 'org.robolectric'
apply plugin: "jacoco"
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "deltagraphs.norrisviewer"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled = true
        }
    }
    defaultConfig {
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-plugin-registry'
        exclude module: 'maven-profile'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'nekohtml'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'support-v4'
        // crazy but my android studio don't like this dependency and to fix it remove .idea and re import project
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-http-shared'
        exclude module: 'wagon-provider-api'
    }
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.github.lecho:hellocharts-library:1.5.4@aar'
    compile('com.github.nkzawa:socket.io-client:0.3.0') {
        exclude group: 'org.json', module: 'json'
    }
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.0'
    compile 'com.google.maps.android:android-maps-utils:0.3.+'
    compile files('libs/org.json.jar')
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['test']) {
    description = "Generates Jacoco coverage reports: XML and HTML"
    group = "Reporting"
//                outputs.upToDateWhen { false }

    // use hidden configuration, for details look into JacocoPlugin.groovy
    jacocoClasspath = project.configurations['androidJacocoAnt']

    // exclude auto-generated classes and tests
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*',
                      'android/**/*.*', '**/Convert.*', '**/deltagraphs/norrisviewer/presenter/Convert*.*', '**/deltagraphs/norrisviewer/view/graphsView/SampleTableAdapter*.*',
                      '**/deltagraphs/norrisviewer/view/graphsView/MatrixTableAdapter.*', '**/Hsl.*',
                      '**/deltagraphs/norrisviewer/view/mainView/MainActivity/PlaceholderFragment.*', '**/ChartAdapter.*', '**/ChartDescription.*', '**/deltagraphs/norrisviewer/view/mainView/MainActivity$*.*',
                      '**/deltagraphs/norrisviewer/view/graphView/LineChartActivity$*ValueTouchListener*.*', '**/deltagraphs/norrisviewer/view/graphView/LineChartActivity$*ViewportListener*.*',
                      '**/deltagraphs/norrisviewer/view/graphsView/*RecordListAdapter.*', '**/deltagraphs/norrisviewer/presenter/mainPresenter/MainPresenter*$*.*',
                      '**/deltagraphs/norrisviewer/view/graphsView/*RecordList.*', '**/deltagraphs/norrisviewer/view/graphsView/*Record.*', '**/deltagraphs/norrisviewer/view/graphsView/TableActivity/*Record.*',
                      '**/com/inqbarna/tablefixheaders*.*', '**/com/inqbarna/tablefixheaders*/*.*', '**/com/inqbarna/tablefixheaders*/adapters*/*.*']
    def debugTree = fileTree(dir: "${project.buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

    reports {
        xml {
            enabled = true
            destination = "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        }
        csv.enabled false
        html {
            enabled = true
            destination = "${project.buildDir}/reports/jacoco"
        }
    }
}